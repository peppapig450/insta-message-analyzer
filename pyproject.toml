[project]
authors = [
  {name = "peppapig450", email = "peppapig450@pm.me"},
]
dependencies = [
  "pandas (>=2.2.3,<3.0.0)",
  "emoji (>=2.14.1,<3.0.0)",
  "plotly (>=6.0.0,<7.0.0)",
]
description = "A Python tool for analyzing Instagram message data, providing temporal and network analysis to analyze and visualize social interaction patterns."
name = "insta-message-analyzer"
readme = "README.md"
requires-python = ">=3.12,<=3.13"
version = "0.1.0"

[build-system]
build-backend = "poetry.core.masonry.api"
requires = ["poetry-core>=2.0.0,<3.0.0"]

[project.scripts]
analyze = "insta_message_analyzer.main"

[project.optional-dependencies]
dev = [
  "matplotlib",
  "seaborn",
]

[tool.poetry.group.dev.dependencies]
mypy = "^1.15.0"
pandas-stubs = "^2.2.3.241126"
pre-commit = "^4.1.0"
pytest = "^8.3.5"
ruff = "^0.9.9"

[tool.ruff]
exclude = [
  ".bzr",
  ".direnv",
  ".eggs",
  ".git",
  ".git-rewrite",
  ".hg",
  ".ipynb_checkpoints",
  ".mypy_cache",
  ".nox",
  ".pants.d",
  ".pyenv",
  ".pytest_cache",
  ".pytype",
  ".ruff_cache",
  ".svn",
  ".tox",
  ".venv",
  ".vscode",
  "__pypackages__",
  "_build",
  "buck-out",
  "build",
  "dist",
  "node_modules",
  "site-packages",
  "venv",
]

# Same as Black
indent-width = 4
line-length = 108

# Assume Python 3.12
target-version = "py312"

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
ignore = [
  #### modules
  "ANN", # flake8-annotations
  "COM", # flake8-commas
  "C90", # mccabe complexity
  "DJ", # django
  "EXE", # flake8-executable
  "T10", # debugger
  "TID", # flake8-tidy-imports
  #### specific rules
  "D100", # ignore missing docs
  "D101",
  "D102",
  "D103",
  "D104",
  "D105",
  "D106",
  "D107",
  "D212",
  "D213", # NumPy summary starts on first line
  "E402", # false positives for local imports
  "E501", # line too long
  "TRY003", # external messages in exceptions are too verbose
  "TD002",
  "TD003",
  "FIX002", # too verbose descriptions of todos
]
select = [
  "ALL",
]

fixable = ["ALL"]

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.lint.pydocstyle]
# Specify the docstring convention
convention = "numpy"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

[tool.mypy]
check_untyped_defs = true # Check untyped function bodies
disallow_any_generics = false # Allow generic types (useful for pandas/numpy)
exclude = ['tests/']
explicit_package_bases = true
follow_imports = "normal" # Default, but explicit for clarity
ignore_missing_imports = false # Disable to enforce stubs, with exceptions below
namespace_packages = true
packages = ["insta_message_analyzer"]
python_version = "3.12"
strict = true
warn_no_return = true # Ensure all paths return a value
warn_unused_configs = true # Catch unused settings
warn_unused_ignores = true # Highlight unnecessary # type: ignore

[[tool.mypy.overrides]]
ignore_missing_imports = true
module = "plotly.*"
