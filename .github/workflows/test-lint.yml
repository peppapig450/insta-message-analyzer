name: Test & Lint

on:
  workflow_call:
    inputs:
      python-versions:
        description: 'JSON array of Python versions'
        required: false
        default: '["3.12"]'
        type: string

jobs:
  test-and-lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ${{ fromJson(inputs.python-versions) }}
      fail-fast: false 

    steps:
      - uses: actions/checkout@v4

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 - --version 2.1.1
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - id: cache
        uses: actions/cache@v4
        with:
          path: .venv
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-poetry-

      # Install dependencies if cache misses occur
      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          poetry install --no-interaction --with dev

      - name: Run Ruff linting
        run: |
          poetry run ruff check .

      - name: Check formatting with Ruff
        run: |
          poetry run ruff format . --check

      - name: Run MyPy
        run: |
          poetry run mypy .

      - name: Run Pytest
        run: |
          poetry run pytest
